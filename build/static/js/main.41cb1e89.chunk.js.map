{"version":3,"sources":["Laser/Laser.fc.tsx","Console/Console.fc.tsx","Navigation/Navigation.fc.tsx","Prompt/Prompt.tsx","serviceWorker.ts","index.tsx"],"names":["Laser","canvasRef","React","useRef","getDevicePixels","size","window","devicePixelRatio","useEffect","isIncreasing","canvas","current","ctx","getContext","width","innerWidth","height","innerHeight","canvasWidth","canvasHeight","setAttribute","concat","scale","retinaResize","counter","setInterval","n","Math","floor","random","clearRect","beginPath","moveTo","lineTo","lineWidth","closePath","strokeStyle","shadowColor","shadowBlur","stroke","react_default","a","createElement","ref","Console","className","Laser_fc","Navigation","rel","target","href","Prompt","Console_fc","Navigation_fc","Boolean","location","hostname","match","ReactDOM","render","ui_Prompt_Prompt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41cb1e89.chunk.js","sourcesContent":["import React from 'react';\n// ...\n// canvas draw function\n// ...\nconst Laser = () => {\n\tconst canvasRef: any = React.useRef(null);\n\n\tconst retinaResize = (canvas: HTMLCanvasElement, ctx: any, canvasWidth: number, canvasHeight: number) => {\n\t\tif (window.devicePixelRatio > 1) {\n\t\t\tcanvas.width = canvasWidth * window.devicePixelRatio;\n\t\t\tcanvas.height = canvasHeight * window.devicePixelRatio;\n\t\t\tcanvas.setAttribute('style', `width:${canvasWidth}px;height:${canvasHeight}px`);\n\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t}\n\t};\n\tconst getDevicePixels = (size: number) => {\n\t\tif (window.devicePixelRatio > 1) {\n\t\t\treturn size * window.devicePixelRatio;\n\t\t} else {\n\t\t\treturn size;\n\t\t}\n\t};\n\tReact.useEffect(() => {\n\t\tlet isIncreasing = true;\n\t\tconst canvas = canvasRef.current;\n\t\tif (canvas) {\n\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\tcanvas.width = window.innerWidth / 10;\n\t\t\tcanvas.height = window.innerHeight / 10;\n\t\t\tretinaResize(canvas, ctx, canvas.width, canvas.height);\n\t\t\tlet counter = 0;\n\t\t\tsetInterval(function() {\n\t\t\t\tlet n = Math.floor(Math.random() * 10);\n\t\t\t\tif (n % 2 === 0) {\n\t\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\t}\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(counter * n, 0);\n\t\t\t\tctx.lineTo(getDevicePixels(canvas.width), getDevicePixels(canvas.height)); // dont touch\n\t\t\t\tctx.lineWidth = 1;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.strokeStyle = '#ff39a1';\n\t\t\t\tctx.shadowColor = '#ff39a1';\n\t\t\t\t// set initial blur of 3px\n\t\t\t\tctx.shadowBlur = 8;\n\t\t\t\tctx.stroke();\n\t\t\t\tif (counter === 100) {\n\t\t\t\t\tisIncreasing = false;\n\t\t\t\t} else if (counter === 0) {\n\t\t\t\t\tisIncreasing = true;\n\t\t\t\t}\n\t\t\t\tcounter = isIncreasing ? counter + 1 : counter - 1;\n\t\t\t}, 200);\n\t\t}\n\t});\n\treturn <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n};\nexport default Laser;\n","import React from 'react';\n\nimport Laser from '../Laser/Laser.fc';\nimport './Console.css';\n\nconst Console: React.FC = () => {\n\treturn (\n\t\t<div className=\"Console\">\n\t\t\t<div className=\"__crt\" />\n\t\t\t<div className=\"__glare\" />\n\t\t\t<div className=\"__line\" />\n\t\t\t<Laser />\n\t\t\t<Laser />\n\t\t</div>\n\t);\n};\n\nexport default Console;\n","import React from 'react';\nimport './Navigation.css';\n\nconst Navigation: React.FC = () => {\n\treturn (\n\t\t<nav className=\"Navigation\">\n\t\t\t<ul className=\"__list\">\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//instagram.com/curse_words\">\n\t\t\t\t\t\t<i className=\"icon ion-logo-instagram\" /> Instagram\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//twitter.com/CurseWordsBand\">\n\t\t\t\t\t\t<i className=\"icon ion-md-trash\" /> Twitter\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//www.facebook.com/DontSayCurseWords/\">\n\t\t\t\t\t\t<i className=\"icon ion-logo-facebook\" /> Facebook\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//dontsaycursewords.bandcamp.com/\">\n\t\t\t\t\t\t<i className=\"icon ion-md-radio\" /> Bandcamp\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"javascript:window.location.href = 'mailto:' + ['dontsaycursewords','gmail.com'].join('@')\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"icon ion-md-mail\" /> Email\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\nexport default Navigation;\n","import React from 'react';\nimport './Prompt.css';\nimport Shows from '../Shows/Shows.fc';\nimport Console from '../Console/Console.fc';\nimport Navigation from '../Navigation/Navigation.fc';\nimport Posts from '../Posts/Posts.fc';\n\nconst Prompt: React.FC = () => {\n\treturn (\n\t\t<div className=\"Prompt\">\n\t\t\t<Console />\n\t\t\t<Navigation />\n\t\t\t<header className=\"Prompt-header --center\">\n\t\t\t\t<h1>Curse Words</h1>\n\t\t\t</header>\n\t\t\t{/* <Posts />\n\t\t\t<Shows /> */}\n\t\t\t<div className=\"--center\">\n\t\t\t\t<h2>**Album Release Show at PieShop DC August 9th**</h2>\n\t\t\t\t<h3>\n\t\t\t\t\t<a href=\"https://pieshopdc.com/events/curse-words-album-release-accidents-split-seconds-braceface/\">\n\t\t\t\t\t\tMore info here...\n\t\t\t\t\t</a>\n\t\t\t\t</h3>\n\t\t\t\t<h2>New Album Coming Soon / August 9th!</h2>\n\t\t\t\t<p>Free on Bandcamp</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Prompt;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/typography.css';\nimport './styles/vars.css';\nimport Prompt from './Prompt/Prompt';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Prompt />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}