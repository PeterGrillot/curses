{"version":3,"sources":["Shows/Shows.model.tsx","Loading/Loading.fc.tsx","Shows/Shows.fc.tsx","Laser/Laser.fc.tsx","Console/Console.fc.tsx","Navigation/Navigation.fc.tsx","Posts/Posts.model.tsx","Posts/Posts.fc.tsx","Prompt/Prompt.tsx","serviceWorker.ts","index.tsx"],"names":["ShowsModel","APIJson","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","_","get","map","entry","date","gsx$date","$t","url","gsx$url","venue","gsx$venue","roster","gsx$roster","location","gsx$location","Component","Loading","react_default","a","createElement","className","Shows","_useState","useState","_useState2","slicedToArray","shows","setShows","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","request","response","body","JSON","parse","toUI","Loading_fc","size","show","index","key","href","target","rel","Laser","canvasRef","React","useRef","getDevicePixels","window","devicePixelRatio","isIncreasing","canvas","current","ctx","getContext","width","innerWidth","height","innerHeight","canvasWidth","canvasHeight","setAttribute","concat","scale","retinaResize","counter","setInterval","n","Math","floor","random","clearRect","beginPath","moveTo","lineTo","lineWidth","closePath","strokeStyle","shadowColor","shadowBlur","stroke","ref","Console","Laser_fc","Navigation","PostsModel","title","gsx$title","content","gsx$content","link","gsx$link","Posts","posts","setPosts","post","Prompt","Console_fc","Navigation_fc","Posts_fc","Shows_fc","Boolean","hostname","match","ReactDOM","render","ui_Prompt_Prompt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.173f593a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\nexport type ShowType = {\n\tdate: string;\n\turl: string;\n\tvenue: string;\n\troster: string;\n\tlocation: string;\n};\n\nclass ShowsModel extends Component {\n\treadonly data: Array<any>;\n\tconstructor(APIJson: any) {\n\t\tsuper(APIJson);\n\t\tthis.data = _.get(APIJson, 'feed.entry');\n\t}\n\ttoUI() {\n\t\tconst entries: Array<ShowType> = _.map(this.data, (entry) => {\n\t\t\treturn {\n\t\t\t\tdate: entry.gsx$date.$t,\n\t\t\t\turl: entry.gsx$url.$t,\n\t\t\t\tvenue: entry.gsx$venue.$t,\n\t\t\t\troster: entry.gsx$roster.$t,\n\t\t\t\tlocation: entry.gsx$location.$t\n\t\t\t};\n\t\t});\n\t\treturn entries;\n\t}\n}\n\nexport default ShowsModel;\n","import React, { useEffect, useState } from 'react';\nimport './Loading.css';\n\nconst Loading: React.FC = () => {\n\treturn <span className=\"Loading\">Loading...</span>;\n};\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport request from 'request';\nimport ShowsModel, { ShowType } from './Shows.model';\nimport './Shows.css';\nimport Loading from '../Loading/Loading.fc';\n\nconst Shows: React.FC = () => {\n\tconst [ shows, setShows ] = useState([]);\n\tconst [ error, setError ] = useState(false);\n\tconst [ loading, setLoading ] = useState(true);\n\n\tuseEffect(() => {\n\t\trequest(\n\t\t\t'https://spreadsheets.google.com/feeds/list/1pstEHIoEiQiNtYlTTEIygRJaOVVRVUhAy6BGVzNGm20/1/public/full?alt=json',\n\t\t\t(error, response, body) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tsetError(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst shows: any = new ShowsModel(JSON.parse(body)).toUI();\n\t\t\t\tsetShows(shows);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t);\n\t}, []);\n\n\tif (error) return <p>Something Borked</p>;\n\tif (loading) return <Loading />;\n\n\treturn (\n\t\t<div className=\"Shows --center\">\n\t\t\t<h2>Upcoming Shows</h2>\n\t\t\t<ul className=\"__list\">\n\t\t\t\t{!_.size(shows) ? (\n\t\t\t\t\t<p>No Upcoming Shows || Check Facebook, I probably forgot to update!</p>\n\t\t\t\t) : (\n\t\t\t\t\t_.map(shows, (show: ShowType, index: number) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"__item\" key={index}>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<i className=\"icon ion-md-calendar\" /> {show.date}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<i className=\"icon ion-md-people\" /> {show.roster} \\\\{' '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<i className=\"icon ion-md-compass\" /> {show.venue} \\\\{' '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span>{show.location}</span>\n\t\t\t\t\t\t\t\t<a href={show.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t<span> more info...</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Shows;\n","import React from 'react';\n// ...\n// canvas draw function\n// ...\nconst Laser = () => {\n\tconst canvasRef: any = React.useRef(null);\n\n\tconst retinaResize = (canvas: HTMLCanvasElement, ctx: any, canvasWidth: number, canvasHeight: number) => {\n\t\tif (window.devicePixelRatio > 1) {\n\t\t\tcanvas.width = canvasWidth * window.devicePixelRatio;\n\t\t\tcanvas.height = canvasHeight * window.devicePixelRatio;\n\t\t\tcanvas.setAttribute('style', `width:${canvasWidth}px;height:${canvasHeight}px`);\n\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t}\n\t};\n\tconst getDevicePixels = (size: number) => {\n\t\tif (window.devicePixelRatio > 1) {\n\t\t\treturn size * window.devicePixelRatio;\n\t\t} else {\n\t\t\treturn size;\n\t\t}\n\t};\n\tReact.useEffect(() => {\n\t\tlet isIncreasing = true;\n\t\tconst canvas = canvasRef.current;\n\t\tif (canvas) {\n\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\tcanvas.width = window.innerWidth;\n\t\t\tcanvas.height = window.innerHeight;\n\t\t\tretinaResize(canvas, ctx, canvas.width, canvas.height);\n\t\t\tlet counter = 0;\n\t\t\tsetInterval(function() {\n\t\t\t\tlet n = Math.floor(Math.random() * 10);\n\t\t\t\tif (n % 2 === 0) {\n\t\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\t}\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(counter * n, 0);\n\t\t\t\tctx.lineTo(getDevicePixels(canvas.width), getDevicePixels(canvas.height)); // dont touch\n\t\t\t\tctx.lineWidth = 1;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.strokeStyle = '#ff39a1';\n\t\t\t\tctx.shadowColor = '#ff39a1';\n\t\t\t\t// set initial blur of 3px\n\t\t\t\tctx.shadowBlur = 8;\n\t\t\t\tctx.stroke();\n\t\t\t\tif (counter === 100) {\n\t\t\t\t\tisIncreasing = false;\n\t\t\t\t} else if (counter === 0) {\n\t\t\t\t\tisIncreasing = true;\n\t\t\t\t}\n\t\t\t\tcounter = isIncreasing ? counter + 1 : counter - 1;\n\t\t\t}, 200);\n\t\t}\n\t});\n\treturn <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n};\nexport default Laser;\n","import React from 'react';\n\nimport Laser from '../Laser/Laser.fc';\nimport './Console.css';\n\nconst Console: React.FC = () => {\n\treturn (\n\t\t<div className=\"Console\">\n\t\t\t<div className=\"__crt\" />\n\t\t\t<div className=\"__glare\" />\n\t\t\t<div className=\"__line\" />\n\t\t\t<Laser />\n\t\t\t<Laser />\n\t\t</div>\n\t);\n};\n\nexport default Console;\n","import React from 'react';\nimport './Navigation.css';\n\nconst Navigation: React.FC = () => {\n\treturn (\n\t\t<nav className=\"Navigation\">\n\t\t\t<ul className=\"__list\">\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//instagram.com/curse_words\">\n\t\t\t\t\t\t<i className=\"icon ion-logo-instagram\" /> Instagram\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//twitter.com/CurseWordsBand\">\n\t\t\t\t\t\t<i className=\"icon ion-md-trash\" /> Twitter\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//www.facebook.com/DontSayCurseWords/\">\n\t\t\t\t\t\t<i className=\"icon ion-logo-facebook\" /> Facebook\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//dontsaycursewords.bandcamp.com/\">\n\t\t\t\t\t\t<i className=\"icon ion-md-radio\" /> Bandcamp\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"__item\">\n\t\t\t\t\t<a\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"javascript:window.location.href = 'mailto:' + ['dontsaycursewords','gmail.com'].join('@')\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"icon ion-md-mail\" /> Email\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\nexport default Navigation;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nexport type PostType = {\n\ttitle: string;\n\tcontent: string;\n\tlink: string;\n};\nclass PostsModel extends Component {\n\treadonly data: Array<any>;\n\tconstructor(APIJson: any) {\n\t\tsuper(APIJson);\n\t\tthis.data = _.get(APIJson, 'feed.entry');\n\t}\n\ttoUI() {\n\t\tconst entries: Array<PostType> = _.map(this.data, (entry) => {\n\t\t\treturn {\n\t\t\t\ttitle: entry.gsx$title.$t,\n\t\t\t\tcontent: entry.gsx$content.$t,\n\t\t\t\tlink: entry.gsx$link.$t\n\t\t\t};\n\t\t});\n\t\treturn entries;\n\t}\n}\n\nexport default PostsModel;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport request from 'request';\nimport Loading from '../Loading/Loading.fc';\nimport PostsModel, { PostType } from './Posts.model';\nimport './Posts.css';\n\ntype Post = {\n\ttitle: string;\n\tcontent: string;\n\tlink: string;\n};\n\nconst Posts: React.FC = () => {\n\tconst [ posts, setPosts ] = useState([]);\n\tconst [ error, setError ] = useState(false);\n\tconst [ loading, setLoading ] = useState(true);\n\n\tuseEffect(() => {\n\t\trequest(\n\t\t\t'https://spreadsheets.google.com/feeds/list/1pstEHIoEiQiNtYlTTEIygRJaOVVRVUhAy6BGVzNGm20/2/public/full?alt=json',\n\t\t\t(error, response, body) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tsetError(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst post: any = new PostsModel(JSON.parse(body)).toUI();\n\t\t\t\tsetPosts(post);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t);\n\t}, []);\n\n\tif (error) return <p>Something Borked</p>;\n\tif (loading) return <Loading />;\n\treturn (\n\t\t<div className=\"Posts --center\">\n\t\t\t<h2>What's Going On?</h2>\n\t\t\t<ul className=\"__list\">\n\t\t\t\t{_.map(posts, (post: PostType, index: number) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"__item\" key={index}>\n\t\t\t\t\t\t\t<h3>{post.title}</h3>\n\t\t\t\t\t\t\t<p>{post.content}</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<a href={post.link}> more Info...</a>{' '}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Posts;\n","import React from 'react';\nimport './Prompt.css';\nimport Shows from '../Shows/Shows.fc';\nimport Console from '../Console/Console.fc';\nimport Navigation from '../Navigation/Navigation.fc';\nimport Posts from '../Posts/Posts.fc';\n\nconst Prompt: React.FC = () => {\n\treturn (\n\t\t<div className=\"Prompt\">\n\t\t\t<Console />\n\t\t\t<Navigation />\n\t\t\t<header className=\"Prompt-header --center\">\n\t\t\t\t<h1>Curse Words Web Portal</h1>\n\t\t\t</header>\n\t\t\t<Posts />\n\t\t\t<Shows />\n\t\t</div>\n\t);\n};\n\nexport default Prompt;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/typography.css';\nimport './styles/vars.css';\nimport Prompt from './Prompt/Prompt';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Prompt />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}